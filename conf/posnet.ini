########################
#                      #
# Server configuration #
#                      #
########################

# The port number which the server will listened and accept incoming 
# connection.
# If set to 0, the server will randomly pick up an unused port.
#
# @since 0.1.0
#
server.port=1234


# The port number which the JMX server will the RMI listen on.
#
# @since 0.1.0
#server.monitor_port = 9999

# The hostname of rmi server
#
# Default value: localhost
#
# @since 0.3.2 
# 
#server.jmx.rmi.hostname=localhost

# Whether open the switch to monitor the default system mxbeans that come 
# from ManagementFactory.
#
# Default value: 1 (true)
# 
# @since: 0.3.3
#
#server.jmx.system.mxbean.monitor=1

# Every several seconds (this value), server should trigger server filter's
# sessionIdle() method to check whether this session had been idle.
#
# Default value: 10
# 
# @since: 0.3.3
#
#server.check.idle.interval=10

# The maximum idle time, in seconds, before the server will close an idle 
# client. If set to zero, server will not close any idle client.
#
# Default value: 1800 
#server.client_max_idle_time=1800


# The thread pool size allocated for handling commands sent from client.
# The recommended value is the number of concurrent active client connections 
# possible. Active concurrent connections means connection which has data
# activity. For example, in a production environment which may have 10,000
# clients connected, but we assumed at any time, only 100 clients will send
# / receive data to/from server, this value should be set to 100. 
# 
#
server.service_handler.thread_pool_size=100

# sets the time, in seconds, which the server will periodically clear any 
# unused sessions.
#
# Default value: 3600
#
# @since 0.1.0
#server.session.timeout_check_interval=3600

# session key timeout, in seconds, which a session will be considered timed
# out.
#
# @since 0.1.0
#server.session.client_timeout=900

# disable message header checksum checking. If set to 0, checksum checking
# will be taken place. If set to 1, the checking is skipped. The purpose of 
# this settings for easier software testing since the checksum requires 
# calculating the message content, which may not be an easy job in testing.
#
# Please set this to 0 for production environment!
#
# Default value: 0
#
# @since 0.1.0
#server.disable_checksum_check=0

# disable check challenge. If 0, login challenge will be checked, if set to
# 1, checking will be disabled. Set to 1 for easier software testing. For
# production, this value should be set to 0.
#
# Default value: 0
#
# @since 0.1.0
server.disable_challenge_check=0


# the base directory which stores the list of firmwares. It is recommended 
# that no trailing slashes is presented.
# There is no need to escape slash (\) character to (\\). 
firmware.location=/var/lib/posnet2-mgmtui/firmware

# The maximum allowed message size (including the header), in bytes, which 
# the server can accept. Any positive non-zero value are allowed.
#
# It is hard to define a one-fits-all value as the content of different 
# commands are different. Therefore, one can only set a sane value for this,
# for example, a message of 1 MB maybe inappropriate since some client, like 
# POS machine, has limited RAM. However, this depends on the type of machines
# appear in the network.
#
# Default value: unlimited.
#server.message.max_size=102400



##########################
#                        #
# Database configuration #
#                        #
##########################


# Default configuration use HSQL in-memory database. Change it to suit your 
# deployment environment.

# User name which connects to the database.
db.user=root

# Password which connects to the database.
db.password=167118

# Fully-qualified name of the JDBC driver. For example, org.hsqldb.jdbcDriver.
#
# HSQL  : org.hsqldb.jdbcDriver
# MySQL : com.mysql.jdbc.Driver
db.driver=com.mysql.jdbc.Driver

# JDBC URL to connect to database.
#
# HSQL  : jdbc.hsqldb:. (in-memory database)
# MySQL : jdbc:mysql://localhost/posnet?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8
db.url=jdbc:mysql://localhost/posnet?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8


#
# Configuration extension. Every configuration directive started with the key
# 'db.ext' will be directly set to the underlying JPA configuration.
#
# One common usage is to configure Hibernate as it is a widely used ORM 
# library. You may refer to the documentation at
# http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html
#

#
# Hibernate extension.
#

# Hibernate Configuration Properties

# The classname of a Hibernate org.hibernate.dialect.Dialect which allows 
# Hibernate to generate SQL optimized for a particular relational database.
#
# In most cases Hibernate will actually be able to choose the correct 
# org.hibernate.dialect.Dialect implementation based on the JDBC metadata 
# returned by the JDBC driver.
#
# See http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html#configuration-optional-dialects
# for a list of Hibernate dialects.
#db.ext.hibernate.dialect=org.hibernate.dialect.HSQLDialect

# Write all SQL statements to console. This is an alternative to setting the 
# log category org.hibernate.SQL to debug.
#
# This should be turned off for production.
#db.ext.hibernate.show_sql=true

# Pretty print the SQL in the log and console. 
#
# This should be turned off for production.
#db.ext.hibernate.format_sql=true

# Sets a default size for Hibernate batch fetching of associations.
#
# Recommended values 4, 8, 16 
#db.ext.hibernate.default_batch_fetch_size=16

# Forces Hibernate to order SQL updates by the primary key value of the items 
# being updated. This will result in fewer transaction deadlocks in highly 
# concurrent systems. 
#db.ext.hibernate.order_updates=true

# If enabled, Hibernate will collect statistics useful for performance tuning.
#db.ext.hibernate.generate_statistics=true

# If turned on, Hibernate will generate comments inside the SQL, for easier 
# debugging, defaults to false.
#db.ext.hibernate.use_sql_comments=true


# Hibernate JDBC and Connection Properties

#
# We use C3P0 connection pooling to check the validity of the connection.
#
# Just add any c3p0 specific parameters with config key begin with
# 'db.ext.hibernate.c3p0.'.
#
# See the following URL for complete C3P0 configuration:
# http://www.mchange.com/projects/c3p0/index.html#configuration
#
# List of configuration properties:
# http://www.mchange.com/projects/c3p0/index.html#configuration_properties
#

# The classname of a custom org.hibernate.connection.ConnectionProvider 
# which provides JDBC connections to Hibernate. 
db.ext.hibernate.connection.provider_class=org.hibernate.connection.C3P0ConnectionProvider

# 
# C3P0 Basic Pool Configuration
#

# Determines how many connections at a time c3p0 will try to acquire when the 
# pool is exhausted. Default is 3. 
#db.ext.hibernate.c3p0.acquireIncrement=3

# Number of Connections a pool will try to acquire upon startup. Should be 
# between minPoolSize and maxPoolSize. 
# db.ext.hibernate.c3p0.initialPoolSize=3

# Minimum number of JDBC connections in the pool.
# Default: 3
db.ext.hibernate.c3p0.minPoolSize=5

# Maximum number of Connections a pool will maintain at any given time. 
# Default: 15.
db.ext.hibernate.c3p0.maxPoolSize=20


#
# C3P0: Managing Pool Size and Connection Age
#

# Seconds, effectively a time to live. A Connection older than 
# maxConnectionAge will be destroyed and purged from the pool. This differs 
# from maxIdleTime in that it refers to absolute age. Even a Connection 
# which has not been much idle will be purged from the pool if it exceeds 
# maxConnectionAge. Zero means no maximum absolute age is enforced.
# Default: 0 
#db.ext.hibernate.c3p0.maxConnectionAge=0

# Seconds a Connection can remain pooled but unused before being discarded. 
# Zero means idle connections never expire.
# Default: 0 
db.ext.hibernate.c3p0.maxIdleTime=1800


#
# C3P0: Configuring Connection Testing
#

# If this is a number greater than 0, c3p0 will test all idle, pooled but 
# unchecked-out connections, every this number of seconds.
# Default: 0 
#db.ext.hibernate.c3p0.idleConnectionTestPeriod=0

# Defines the query that will be executed for all connection tests, if the 
# default ConnectionTester (or some other implementation of 
# QueryConnectionTester, or better yet FullQueryConnectionTester) is 
# being used.
#
# See http://www.mchange.com/projects/c3p0/index.html#preferredTestQuery 
#
# Default: null
#db.ext.hibernate.c3p0.preferredTestQuery=


# If true, an operation will be performed asynchronously at every connection 
# check-in to verify that the connection is valid. Use in combination with 
# idleConnectionTestPeriod for quite reliable, always asynchronous 
# Connection testing. Also, setting an automaticTestTable or 
# preferredTestQuery will usually speed up all connection tests.
#
# Default: false
#db.ext.hibernate.c3p0.testConnectionOnCheckin=true


# Use only if necessary. Expensive. If true, an operation will be performed 
# at every connection checkout to verify that the connection is valid. 
# Better choice: verify connections periodically using 
# idleConnectionTestPeriod. Also, setting an automaticTestTable or 
# preferredTestQuery will usually speed up all connection tests
#
# See http://www.mchange.com/projects/c3p0/index.html#testConnectionOnCheckout
# See db.ext.hibernate.c3p0.idleConnectionTestPeriod
#
# Default: false
db.ext.hibernate.c3p0.testConnectionOnCheckout=true


#
# C3P0: Configuring Statement Pooling
#

# The size of c3p0's global PreparedStatement cache. If both 
# maxStatements and maxStatementsPerConnection are zero, statement 
# caching will not be enabled. If maxStatements is zero but 
# maxStatementsPerConnection is a non-zero value, statement caching 
# will be enabled, but no global limit will be enforced, 
# only the per-connection maximum. maxStatements controls the total number 
# of Statements cached, for all Connections. If set, it should be a 
# fairly large number, as each pooled Connection requires its own, distinct 
# flock of cached statements. As a guide, consider how many distinct 
# PreparedStatements are used frequently in your application, and multiply 
# that number by maxPoolSize to arrive at an appropriate value. Though 
# maxStatements is the JDBC standard parameter for controlling statement 
# caching, users may find c3p0's alternative maxStatementsPerConnection 
# more intuitive to use.
#
# Default: 0
db.ext.hibernate.c3p0.maxStatements=50


# The number of PreparedStatements c3p0 will cache for a single pooled 
# Connection.
#
# For detail, please see 
# http://www.mchange.com/projects/c3p0/index.html#maxStatementsPerConnection 
#
# Default: 0
db.ext.hibernate.c3p0.maxStatementsPerConnection=10


#
# CP30: Configuring Recovery From Database Outages
#

# Defines how many times c3p0 will try to acquire a new Connection from 
# the database before giving up. If this value is less than or equal to zero, 
# c3p0 will keep trying to fetch a Connection indefinitely.
#
# Default: 30
#db.ext.hibernate.c3p0.acquireRetryAttempts=30


# Milliseconds, time c3p0 will wait between acquire attempts. 
#
# Default: 1000
#db.ext.hibernate.c3p0.acquireRetryDelay=1000

# If true, a pooled DataSource will declare itself broken and be permanently 
# closed if a Connection cannot be obtained from the database after making 
# acquireRetryAttempts to acquire one. If false, failure to obtain a 
# Connection will cause all Threads waiting for the pool to acquire a 
# Connection to throw an Exception, but the DataSource will remain valid, 
# and will attempt to acquire again following a call to getConnection().
#
# Default: false
#db.ext.hibernate.c3p0.breakAfterAcquireFailure=false



################################
#                              #
# Tencent server configuration #
#                              #
################################

# Tencent's test server. (121.14.96.114)

# Points to the URL for groupon searching.
qq.groupbuy.url.groupBuyingSearchGroupon=http://121.14.96.114/api/pos/query

# Points to the URL for groupong validation.
qq.groupbuy.url.groupBuyingValidationUrl=http://121.14.96.114/api/pos/verify

# Points to the URL for unbinding a POS machine from the POS network.
qq.groupbuy.url.groupBuyingUnbindPosUrl=http://121.14.96.114/api/pos/reset

# the key which will be sent to Tencent server to identify China Rewards.
txserver.key = JXTPOS



################################
#                              #
# Tencent QQ Meishi	       #
#                              #
################################

# QQ Meishi server host address
qq.meishi.wsapi.host=open.meishi.qq.com

# QQ Meishi Q-Mi Web service URL
qq.meishi.wsapi.url=http://open.meishi.qq.com/pos.php

# QQ Meishi Q-Mi Web Service secret key
qq.meishi.wsapi.secretKey=NDA2ZTkwOTExZjlkZDY3ZTIxMTU1OTY0NmVlYzVmY2Q=


##########################################################
#                                                        #
# Dispatcher (service handler and command message codec) #
#                                                        #
##########################################################

include = dispatcher.ini
